<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>My World</title>
  
  
  <link href="https://godofl.github.io/atom.xml" rel="self"/>
  
  <link href="https://godofl.github.io/"/>
  <updated>2021-11-15T05:21:41.098Z</updated>
  <id>https://godofl.github.io/</id>
  
  <author>
    <name>GODOFL</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>JavaScript笔记</title>
    <link href="https://godofl.github.io/2021/11/15/JavaScript%20notes/"/>
    <id>https://godofl.github.io/2021/11/15/JavaScript%20notes/</id>
    <published>2021-11-15T04:26:46.622Z</published>
    <updated>2021-11-15T05:21:41.098Z</updated>
    
    <content type="html"><![CDATA[<p>===<br>板块制作中<br>===</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;===&lt;br&gt;板块制作中&lt;br&gt;===&lt;/p&gt;
</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>CSS笔记</title>
    <link href="https://godofl.github.io/2021/11/15/CSS%20notes/"/>
    <id>https://godofl.github.io/2021/11/15/CSS%20notes/</id>
    <published>2021-11-15T04:26:24.606Z</published>
    <updated>2021-11-15T05:21:42.258Z</updated>
    
    <content type="html"><![CDATA[<p>===<br>板块制作中<br>===</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;===&lt;br&gt;板块制作中&lt;br&gt;===&lt;/p&gt;
</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>HTML笔记</title>
    <link href="https://godofl.github.io/2021/11/15/HTML%20notes/"/>
    <id>https://godofl.github.io/2021/11/15/HTML%20notes/</id>
    <published>2021-11-15T04:26:10.914Z</published>
    <updated>2021-11-15T05:19:46.794Z</updated>
    
    <content type="html"><![CDATA[<p>===<br>板块制作中<br>===</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;===&lt;br&gt;板块制作中&lt;br&gt;===&lt;/p&gt;
</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Python笔记</title>
    <link href="https://godofl.github.io/2021/11/15/Python%20notes/"/>
    <id>https://godofl.github.io/2021/11/15/Python%20notes/</id>
    <published>2021-11-15T04:25:51.318Z</published>
    <updated>2021-11-16T15:44:00.077Z</updated>
    
    <content type="html"><![CDATA[<p><font color=#FF0000>以下的程序都是在Python3下运行</font></p><h1 id="变量和简单的数据类型"><a href="#变量和简单的数据类型" class="headerlink" title="变量和简单的数据类型"></a>变量和简单的数据类型</h1><h2 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h2><p>在程序中可以随时修改变量的值，Python始终记录的是变量的最新值。<br>关于变量的命名与使用和C语言没什么区别，除了i与O要谨慎使用(可能会被看成1和0)。</p><h2 id="字符串"><a href="#字符串" class="headerlink" title="字符串"></a>字符串</h2><p>与C语言不同的是Python的字符串是用<strong>引号</strong>(<strong>单引号和双引号</strong>)扩起，看似简单，其实使用的方式有很多。</p><h3 id="修改字符串的大小写"><a href="#修改字符串的大小写" class="headerlink" title="修改字符串的大小写"></a>修改字符串的大小写</h3><p>使用<strong>title()函数</strong>，title()函数是将字符串里的每个单词首字母大写。title()函数括号里是空的是因为title()函数不需要提供额外的信息。<br>使用title()，使用代码如下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">name = <span class="string">&quot;ada lovelace&quot;</span></span><br><span class="line"><span class="built_in">print</span>(name.title())</span><br></pre></td></tr></table></figure><p>输出结果如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Ada Lovelace</span><br></pre></td></tr></table></figure><p>还有两个函数upper()和lower()函数，与C语言不同的是这两个函数改的是<strong>整串</strong>字符串，用法与title()函数相同。</p><h3 id="拼接字符串"><a href="#拼接字符串" class="headerlink" title="拼接字符串"></a>拼接字符串</h3><p>相比C语言，Python的字符串拼接大有不同，Python的字符串拼接不需要调用任何函数，可以直接用+号进行<strong>拼接</strong>。<br>字符串拼接的示例如下<br>示例一</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">first_name = <span class="string">&quot;ada&quot;</span></span><br><span class="line">last_name = <span class="string">&quot;lovelace&quot;</span></span><br><span class="line">full_name = first_name + <span class="string">&quot; &quot;</span> + last_name</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(full_name)</span><br></pre></td></tr></table></figure><p>输出结果如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ada lovelace</span><br></pre></td></tr></table></figure><p>示例二</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">first_name = <span class="string">&quot;ada&quot;</span></span><br><span class="line">last_name = <span class="string">&quot;lovelace&quot;</span></span><br><span class="line">full_name = first_name + <span class="string">&quot; &quot;</span> + last_name</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;Hello, &quot;</span> + full_name.title() + <span class="string">&quot;!&quot;</span>)</span><br></pre></td></tr></table></figure><p>示例三</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">first_name = <span class="string">&quot;ada&quot;</span></span><br><span class="line">last_name = <span class="string">&quot;lovelace&quot;</span></span><br><span class="line">full_name = first_name + <span class="string">&quot; &quot;</span> + last_name</span><br><span class="line"></span><br><span class="line">message = <span class="string">&quot;Hello, &quot;</span> + full_name.title() + <span class="string">&quot;!&quot;</span></span><br><span class="line"><span class="built_in">print</span>(message)</span><br></pre></td></tr></table></figure><h3 id="删除空白"><a href="#删除空白" class="headerlink" title="删除空白"></a>删除空白</h3><p>Python提供<strong>strip()函数</strong>用于删除字符串中多余的空白，但删除空白是暂时的，如果想彻底删除，就要将删除后的新值重新存放回原来的变量中。<br>使用方法如下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">my_name = <span class="string">&quot; Alex &quot;</span></span><br><span class="line"></span><br><span class="line">my_name = my_name.strip()</span><br><span class="line"><span class="built_in">print</span>(my_name)</span><br></pre></td></tr></table></figure><p>输出结果如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Alex</span><br></pre></td></tr></table></figure><p>还有<strong>lstrip()函数</strong>和<strong>rstrip()函数</strong>，前者用于删除字符串前的空格，后者用于删除字符串后的空格，strip()函数则是删除字符串里所有的空格。</p><h3 id="使用字符串时避免一些语法错误"><a href="#使用字符串时避免一些语法错误" class="headerlink" title="使用字符串时避免一些语法错误"></a>使用字符串时避免一些语法错误</h3><p>以下有两个示例<br>正确</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">message = <span class="string">&quot;One of Python&#x27;s strengths is its diverse community&quot;</span></span><br><span class="line"><span class="built_in">print</span>(message)</span><br></pre></td></tr></table></figure><p>错误</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">message = <span class="string">&#x27;One of Python&#x27;</span>s strengths <span class="keyword">is</span> its diverse community<span class="string">&#x27;        #错误原因是Python不能正确识别结束位置</span></span><br><span class="line"><span class="string">print(message)</span></span><br></pre></td></tr></table></figure><h2 id="数字"><a href="#数字" class="headerlink" title="数字"></a>数字</h2><h3 id="基本类型"><a href="#基本类型" class="headerlink" title="基本类型"></a>基本类型</h3><p>使用数字类型变量时无需定义，可以直接使用。<br>Python可以使用两个乘号表示乘方的运算。<br><strong>注意</strong>：Python中与浮点的计算结果中的小数位是不精确的！！！所以尽量避免整数与浮点比较。</p><h3 id="str-函数"><a href="#str-函数" class="headerlink" title="str()函数"></a>str()函数</h3><p>如果想将数字拼接进字符串中，则要使用该函数将数字转换为字符串，如果没有使用，则在运行时会引发错误。<br>该函数的使用方法如下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">age = <span class="number">23</span></span><br><span class="line">message = <span class="string">&quot;Happy &quot;</span> + <span class="built_in">str</span>(age) + <span class="string">&quot;rd birthday&quot;</span></span><br><span class="line">    </span><br><span class="line"><span class="built_in">print</span>(message)</span><br></pre></td></tr></table></figure><p>输出结果如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Happy 23rd birthday</span><br></pre></td></tr></table></figure><h2 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h2><p>Python使用#号进行注释，#号后面的内容会被编译器忽略。</p><h1 id="列表简介"><a href="#列表简介" class="headerlink" title="列表简介"></a>列表简介</h1><h2 id="访问列表元素"><a href="#访问列表元素" class="headerlink" title="访问列表元素"></a>访问列表元素</h2><p>我们不能直接对列表进行输出，因为会将列表内部表示的全打印，包括方括号。<br>访问列表方法如下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">bicycles = [<span class="string">&#x27;trek&#x27;</span>,<span class="string">&#x27;redline&#x27;</span>,<span class="string">&#x27;specialized&#x27;</span>]</span><br><span class="line"><span class="built_in">print</span>(bicycles[<span class="number">0</span>])</span><br></pre></td></tr></table></figure><p>如果想访问全部，用循环。<br><strong>注意</strong>:从0开始！！！</p><h2 id="在列表中添加元素"><a href="#在列表中添加元素" class="headerlink" title="在列表中添加元素"></a>在列表中添加元素</h2><p>使用<strong>append()函数</strong>进行添加，添加到列表的末尾。<br>该函数使用方法如下:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">motorcycles = [<span class="string">&#x27;honda&#x27;</span>,<span class="string">&#x27;yamaha&#x27;</span>,<span class="string">&#x27;suzuki&#x27;</span>]</span><br><span class="line"><span class="built_in">print</span>(motorcycles)</span><br><span class="line"></span><br><span class="line">motorcycles.append(<span class="string">&#x27;ducati&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(motorcycles)</span><br></pre></td></tr></table></figure><p>输出结果如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[&#x27;honda&#x27;,&#x27;yamaha&#x27;,&#x27;suzuki&#x27;]</span><br><span class="line">[&#x27;honda&#x27;,&#x27;yamaha&#x27;,&#x27;suzuki&#x27;,&#x27;ducati&#x27;]</span><br></pre></td></tr></table></figure><p>我们可以不在方括号里添加变量，创建一个空列表，空列表里的元素可以在程序运行后通过append()函数进行添加。<br>使用<strong>insert()函数</strong>可以在列表的任意位置添加元素，需要指定索引和值。<br>该函数的使用方法如下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">motorcycles = [<span class="string">&#x27;honda&#x27;</span>,<span class="string">&#x27;yamaha&#x27;</span>,<span class="string">&#x27;suzuki&#x27;</span>]</span><br><span class="line"></span><br><span class="line">motorcycles.insert(<span class="number">0</span>,<span class="string">&#x27;ducati&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(motorcycles)</span><br></pre></td></tr></table></figure><p>输出结果如下:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[&#x27;ducati&#x27;,&#x27;honda&#x27;,&#x27;yamaha&#x27;,&#x27;suzuki&#x27;]</span><br></pre></td></tr></table></figure><h2 id="在列表里删除元素"><a href="#在列表里删除元素" class="headerlink" title="在列表里删除元素"></a>在列表里删除元素</h2><p>使用<strong>del语句</strong>进行删除。<br>该语句使用方法如下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">motorcycles = [<span class="string">&#x27;honda&#x27;</span>,<span class="string">&#x27;yamaha&#x27;</span>,<span class="string">&#x27;suzuki&#x27;</span>]</span><br><span class="line"><span class="built_in">print</span>(motorcycles)</span><br><span class="line"></span><br><span class="line"><span class="keyword">del</span> motorcycles[<span class="number">0</span>]</span><br><span class="line"><span class="built_in">print</span>(motorcycles)</span><br></pre></td></tr></table></figure><p>输出结果如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[&#x27;honda&#x27;,&#x27;yamaha&#x27;,&#x27;suzuki&#x27;]</span><br><span class="line">[&#x27;yamaha&#x27;,&#x27;suzuki&#x27;]</span><br></pre></td></tr></table></figure><p>使用<strong>pop()函数</strong>将列表里的元素进行删除，专用术语<strong>弹出</strong>，弹出的是列表里末尾的元素。(即弹出栈顶元素)弹出的值可以被变量接收。<br>该函数使用方法如下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">motorcycles = [<span class="string">&#x27;honda&#x27;</span>,<span class="string">&#x27;yamaha&#x27;</span>,<span class="string">&#x27;suzuki&#x27;</span>]</span><br><span class="line"><span class="built_in">print</span>(motorcycles)</span><br><span class="line"></span><br><span class="line">popped_motorcycles = motorcycles.pop()</span><br><span class="line"><span class="built_in">print</span>(motorcycles)</span><br><span class="line"><span class="built_in">print</span>(popped_motorcycles)</span><br></pre></td></tr></table></figure><p>输出结果如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[&#x27;honda&#x27;,&#x27;yamaha&#x27;,&#x27;suzuki&#x27;]</span><br><span class="line">[&#x27;honda&#x27;,&#x27;yamaha&#x27;]</span><br><span class="line">suzuki</span><br></pre></td></tr></table></figure><p>我们还可以在pop()函数中加入索引指定弹出列表中的某个元素。<br>注:关于del语句与pop()函数的使用判断标准:如果你不在使用列表中删除的元素，则使用del。如果你还想继续使用列表中删除的元素，则使用pop()。<br>如果不知道列表中元素的位置，则<strong>remove()函数</strong>可以删除列表里函数的值。<br>该函数的使用方法如下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">motorcycles = [<span class="string">&#x27;honda&#x27;</span>,<span class="string">&#x27;yamaha&#x27;</span>,<span class="string">&#x27;suzuki&#x27;</span>,<span class="string">&#x27;ducati&#x27;</span>]</span><br><span class="line"><span class="built_in">print</span>(motorcycles)</span><br><span class="line"></span><br><span class="line">motorcycles.remove(<span class="string">&#x27;ducati&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(motorcycles)</span><br></pre></td></tr></table></figure><p>输出结果如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[&#x27;honda&#x27;,&#x27;yamaha&#x27;,&#x27;suzuki&#x27;,&#x27;ducati&#x27;]</span><br><span class="line">[&#x27;honda&#x27;,&#x27;yamaha&#x27;,&#x27;suzuki&#x27;]</span><br></pre></td></tr></table></figure><h2 id="组织列表"><a href="#组织列表" class="headerlink" title="组织列表"></a>组织列表</h2><h3 id="列表的排序"><a href="#列表的排序" class="headerlink" title="列表的排序"></a>列表的排序</h3><p>如果想对一个乱序的列表进行永久性的排序，则需要用到<strong>sort()函数</strong>，如果想倒序，则需要在函数里添加参数reverse=Ture。<br>该函数的用法如下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cars = [<span class="string">&#x27;bmw&#x27;</span>,<span class="string">&#x27;audi&#x27;</span>,<span class="string">&#x27;toyota&#x27;</span>,<span class="string">&#x27;subaru&#x27;</span>]</span><br><span class="line">cars.sort()</span><br><span class="line"><span class="built_in">print</span>(cars)</span><br></pre></td></tr></table></figure><p>输出结果如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[&#x27;audi&#x27;,&#x27;bmw&#x27;,&#x27;subaru&#x27;,toyota]</span><br></pre></td></tr></table></figure><p>如果只想对列表进行临时排序，则使用<strong>sorted()函数</strong>，如果想倒序同上。<br>该函数的使用方法如下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">cars = [<span class="string">&#x27;bmw&#x27;</span>,<span class="string">&#x27;audi&#x27;</span>,<span class="string">&#x27;toyota&#x27;</span>,<span class="string">&#x27;subaru&#x27;</span>]</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;Here is the original list:&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(cars)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;\nHere is the sorted list:&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">sorted</span>(cars))</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;\nHere is the original list again:&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(cars)</span><br></pre></td></tr></table></figure><p>输出结果如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Here is the original list:</span><br><span class="line">[&#x27;bmw&#x27;,&#x27;audi&#x27;,&#x27;toyota&#x27;,&#x27;subaru&#x27;]</span><br><span class="line"></span><br><span class="line">Here is the sorted list:</span><br><span class="line">[&#x27;audi&#x27;,&#x27;bmw&#x27;,&#x27;subaru&#x27;,toyota]</span><br><span class="line"></span><br><span class="line">Here is the original list again:</span><br><span class="line">[&#x27;bmw&#x27;,&#x27;audi&#x27;,&#x27;toyota&#x27;,&#x27;subaru&#x27;]</span><br></pre></td></tr></table></figure><p>如果你想倒着打印列表，则使用<strong>reverse()函数</strong>。<br>该函数的使用方法如下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">cars = [<span class="string">&#x27;bmw&#x27;</span>,<span class="string">&#x27;audi&#x27;</span>,<span class="string">&#x27;toyota&#x27;</span>,<span class="string">&#x27;subaru&#x27;</span>]</span><br><span class="line"><span class="built_in">print</span>(cars)</span><br><span class="line"></span><br><span class="line">cars.reverse()</span><br><span class="line"><span class="built_in">print</span>(cars)</span><br></pre></td></tr></table></figure><p>输出结果如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[&#x27;bmw&#x27;,&#x27;audi&#x27;,&#x27;toyota&#x27;,&#x27;subaru&#x27;]</span><br><span class="line">[&#x27;subaru&#x27;,&#x27;toyota&#x27;,&#x27;audi&#x27;,&#x27;bmw&#x27;]</span><br></pre></td></tr></table></figure><p>如果想恢复原来的列表，只需再次调用该函数。<br><strong>有与C语言数组不同的是Python里的索引可以用负数！</strong></p><h2 id="操作列表"><a href="#操作列表" class="headerlink" title="操作列表"></a>操作列表</h2><h3 id="循环"><a href="#循环" class="headerlink" title="循环"></a>循环</h3><p>如果你想遍历整个列表里的元素，则需要用到循环。Python的循环与C语言的循环写法大有不同，在遍历列表的循环里你可以不告诉循环什么时候截止。前面讲过Python的变量不需要定义即可使用，所以我们可以直接在循环语句里加入变量，但是这个变量是用来储存列表里的元素的。<br>Python的循环语句如下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">magicians = [<span class="string">&#x27;alice&#x27;</span>,<span class="string">&#x27;david&#x27;</span>,<span class="string">&#x27;carolina&#x27;</span>]</span><br><span class="line"><span class="keyword">for</span> magician <span class="keyword">in</span> magicians:</span><br><span class="line">    <span class="built_in">print</span>(magician)</span><br></pre></td></tr></table></figure><p>输出结果如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">alice</span><br><span class="line">davd</span><br><span class="line">carolina</span><br></pre></td></tr></table></figure><p>Python的循环会执行循环下面缩进的语句，没有进行缩进的语句则不会进入循环，同时也避免不必要的缩进。<br><strong>注意:不要遗漏了 : 号！！！</strong>，否则将导致语法错误。</p><h3 id="创建数字列表"><a href="#创建数字列表" class="headerlink" title="创建数字列表"></a>创建数字列表</h3><p>使用<strong>range()函数</strong>可以轻松生成一系列数字，还可以指定步长。<br>使用方法如下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> value <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">5</span>):</span><br><span class="line">    <span class="built_in">print</span>(value)</span><br></pre></td></tr></table></figure><p>输出结果如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td></tr></table></figure><p>range()函数指定步长使用方法如下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> value <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">2</span>,<span class="number">11</span>,<span class="number">2</span>):</span><br><span class="line">    <span class="built_in">print</span>(value)</span><br></pre></td></tr></table></figure><p>输出结果如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">2</span><br><span class="line">4</span><br><span class="line">6</span><br><span class="line">8</span><br><span class="line">10</span><br></pre></td></tr></table></figure><p>使用该函数生成数字时出现在编程语言中差一行的结果，如果出现不符合预期，则可以尝试将指定的值加1或者减1。<br>使用<strong>list()函数</strong>可以直接将<strong>range()函数</strong>的结果直接转换为列表<br>使用方法如下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">number = <span class="built_in">list</span>(<span class="built_in">range</span>(<span class="number">1</span>,<span class="number">6</span>))</span><br><span class="line"><span class="built_in">print</span>(number)</span><br></pre></td></tr></table></figure><p>输出结果如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[1,2,3,4,5]</span><br></pre></td></tr></table></figure><p>在Python中可以使用空列表，如以下代码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">squares = []</span><br><span class="line"><span class="keyword">for</span> value <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">11</span>):</span><br><span class="line">    squares.append(value**<span class="number">2</span>)            <span class="comment">#在Python中两个**代表乘方运算</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(squares)</span><br></pre></td></tr></table></figure><p>输出结果如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[1,4,9,16,25,36,49,64,81,100]</span><br></pre></td></tr></table></figure><p>Python中提供<strong>min()函数，max()函数和sum()函数等</strong>，直接处理数字列表。</p><h3 id="列表解析"><a href="#列表解析" class="headerlink" title="列表解析"></a>列表解析</h3><p>在欣赏别人的代码时，可能会出现以下代码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">squares = [value**<span class="number">2</span> <span class="keyword">for</span> value <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">11</span>)]</span><br><span class="line"><span class="built_in">print</span>(squares)</span><br></pre></td></tr></table></figure><p>这个代码将for循环和创建新元素的代码合并成一行，并自动附加新元素，该情况有个专有名词叫<strong>列表解析</strong>，与上面循环不同的是，这个循环<strong>没有 : 号</strong>。</p><h2 id="使用列表的一部分"><a href="#使用列表的一部分" class="headerlink" title="使用列表的一部分"></a>使用列表的一部分</h2><h3 id="切片"><a href="#切片" class="headerlink" title="切片"></a>切片</h3><p>处理列表里的部分元素，在Python中被称为<strong>切片</strong>。<br>我们在列表中增加索引，既可创建切片，示例如下<br>示例一</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">players = [<span class="string">&#x27;charles&#x27;</span>,<span class="string">&#x27;martina&#x27;</span>,<span class="string">&#x27;micheal&#x27;</span>,<span class="string">&#x27;florence&#x27;</span>,<span class="string">&#x27;eli&#x27;</span>]</span><br><span class="line"><span class="built_in">print</span>(players[<span class="number">0</span>:<span class="number">3</span>])</span><br></pre></td></tr></table></figure><p>输出结果如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[&#x27;charles&#x27;,&#x27;martina&#x27;,&#x27;micheal&#x27;]</span><br></pre></td></tr></table></figure><p>示例二</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">players = [<span class="string">&#x27;charles&#x27;</span>,<span class="string">&#x27;martina&#x27;</span>,<span class="string">&#x27;micheal&#x27;</span>,<span class="string">&#x27;florence&#x27;</span>,<span class="string">&#x27;eli&#x27;</span>]</span><br><span class="line"><span class="built_in">print</span>(players[<span class="number">1</span>:<span class="number">4</span>])</span><br></pre></td></tr></table></figure><p>输出结果如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[&#x27;martina&#x27;,&#x27;micheal&#x27;,&#x27;florence&#x27;]</span><br></pre></td></tr></table></figure><p>示例三</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">players = [<span class="string">&#x27;charles&#x27;</span>,<span class="string">&#x27;martina&#x27;</span>,<span class="string">&#x27;micheal&#x27;</span>,<span class="string">&#x27;florence&#x27;</span>,<span class="string">&#x27;eli&#x27;</span>]</span><br><span class="line"><span class="built_in">print</span>(players[:<span class="number">4</span>])</span><br></pre></td></tr></table></figure><p>输出结果如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[&#x27;charles&#x27;,&#x27;martina&#x27;,&#x27;micheal&#x27;,&#x27;florence&#x27;]</span><br></pre></td></tr></table></figure><p>示例四</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">players = [<span class="string">&#x27;charles&#x27;</span>,<span class="string">&#x27;martina&#x27;</span>,<span class="string">&#x27;micheal&#x27;</span>,<span class="string">&#x27;florence&#x27;</span>,<span class="string">&#x27;eli&#x27;</span>]</span><br><span class="line"><span class="built_in">print</span>(players[<span class="number">2</span>:])</span><br></pre></td></tr></table></figure><p>输出结果如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[&#x27;micheal&#x27;,&#x27;florence&#x27;,&#x27;eli&#x27;]</span><br></pre></td></tr></table></figure><p>示例五</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">players = [<span class="string">&#x27;charles&#x27;</span>,<span class="string">&#x27;martina&#x27;</span>,<span class="string">&#x27;micheal&#x27;</span>,<span class="string">&#x27;florence&#x27;</span>,<span class="string">&#x27;eli&#x27;</span>]</span><br><span class="line"><span class="built_in">print</span>(players[-<span class="number">3</span>:])</span><br></pre></td></tr></table></figure><p>输出结果如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[&#x27;micheal&#x27;,&#x27;florence&#x27;,&#x27;eli&#x27;]</span><br></pre></td></tr></table></figure><p>总结，没有指定第一个索引时，列表重头开始，没有指定第二个索引时，列表在末尾终止，列表的索引用负数，则表示列表从末尾开始的后几个元素。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;font color=#FF0000&gt;以下的程序都是在Python3下运行&lt;/font&gt;&lt;/p&gt;
&lt;h1 id=&quot;变量和简单的数据类型&quot;&gt;&lt;a href=&quot;#变量和简单的数据类型&quot; class=&quot;headerlink&quot; title=&quot;变量和简单的数据类型&quot;&gt;&lt;/a&gt;变量和</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>电脑装机</title>
    <link href="https://godofl.github.io/2021/11/14/Computer%20installation%20notes/"/>
    <id>https://godofl.github.io/2021/11/14/Computer%20installation%20notes/</id>
    <published>2021-11-14T10:59:58.215Z</published>
    <updated>2021-11-14T14:34:57.498Z</updated>
    
    <content type="html"><![CDATA[<h1 id="基本装机步骤"><a href="#基本装机步骤" class="headerlink" title="基本装机步骤"></a>基本装机步骤</h1><h2 id="机箱内"><a href="#机箱内" class="headerlink" title="机箱内"></a>机箱内</h2><h3 id="CPU和主板"><a href="#CPU和主板" class="headerlink" title="CPU和主板"></a>CPU和主板</h3><h4 id="锐龙CPU"><a href="#锐龙CPU" class="headerlink" title="锐龙CPU"></a>锐龙CPU</h4><p>先打开金属把手，CPU引脚面的一个金属三角与主板CPU底座的左上角对齐，然后将CPU<strong>平稳放下</strong>，放好后<strong>上下晃动</strong>一下CPU确保安装到位，再扣回金属把手。</p><h4 id="英特尔CPU"><a href="#英特尔CPU" class="headerlink" title="英特尔CPU"></a>英特尔CPU</h4><p>与锐龙不同的是有个保护盖，引脚比较脆弱得注意，CPU的豁口与主板接口的两个突起对齐，装完后保护盖要拿走。</p><h3 id="内存条"><a href="#内存条" class="headerlink" title="内存条"></a>内存条</h3><p>有些主板只能开一边卡扣，有的两个都要开，看清楚主板，内存条的豁口对齐内存插槽中间的突起，对齐后双手按压两边，直到卡扣自动扣合。(<strong>务必确保内存条插到底，否则会出现开不了机</strong>)</p><h3 id="固态硬盘"><a href="#固态硬盘" class="headerlink" title="固态硬盘"></a>固态硬盘</h3><p>有两个螺丝一个固定硬盘的小螺丝，一个为螺丝柱，在装固态时确保安装固态的地方只有螺丝柱，不能有螺丝。(参考<a href="https://www.bilibili.com/video/BV1jE411e7hw?from=search&seid=4568261125494299823&spm_id_from=333.337.0.0">bilibili【装机教程】05:48</a>)目前大部分主板都是右边豁口的M-Key固态硬盘接口，螺丝不要拧太紧，点到为止。(高端主板则有散热片(参考<a href="https://www.bilibili.com/video/BV1jE411e7hw?from=search&seid=4568261125494299823&spm_id_from=333.337.0.0">bilibili【装机教程】06:58</a>))</p><h3 id="散热器"><a href="#散热器" class="headerlink" title="散热器"></a>散热器</h3><p>版本过多，自己上网查。。。。。</p><h2 id="机箱外侧"><a href="#机箱外侧" class="headerlink" title="机箱外侧"></a>机箱外侧</h2><h3 id="IO挡板"><a href="#IO挡板" class="headerlink" title="IO挡板"></a>IO挡板</h3><p>安装时突起要卡在安装IO挡板的地方，要弄到卡死。</p><h3 id="主板的安装"><a href="#主板的安装" class="headerlink" title="主板的安装"></a>主板的安装</h3><p><strong>绝对禁止主板直接贴着机箱</strong>，要悬空架在机箱托盘上，安装时首先要确保机箱与主板的螺丝孔相一致，少一就不行，拧的时候不能拧太紧，点到为止。</p><h3 id="电源安装"><a href="#电源安装" class="headerlink" title="电源安装"></a>电源安装</h3><p>看机箱有没有进风口，如果有就将电源风扇对准进风口，如果没有就对准上面，螺丝固定。(看机箱而定。。。。。另一种情况参考<a href="https://www.bilibili.com/video/BV1jE411e7hw?from=search&seid=4568261125494299823&spm_id_from=333.337.0.0">bilibili【装机教程】17:29</a>)</p><hr><h2 id="未完待续bilibili【装机教程】18-25"><a href="#未完待续bilibili【装机教程】18-25" class="headerlink" title="未完待续bilibili【装机教程】18:25"></a>未完待续<a href="https://www.bilibili.com/video/BV1jE411e7hw?from=search&seid=4568261125494299823&spm_id_from=333.337.0.0">bilibili【装机教程】18:25</a></h2>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;基本装机步骤&quot;&gt;&lt;a href=&quot;#基本装机步骤&quot; class=&quot;headerlink&quot; title=&quot;基本装机步骤&quot;&gt;&lt;/a&gt;基本装机步骤&lt;/h1&gt;&lt;h2 id=&quot;机箱内&quot;&gt;&lt;a href=&quot;#机箱内&quot; class=&quot;headerlink&quot; title=&quot;机箱内</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>C语言笔记</title>
    <link href="https://godofl.github.io/2021/11/13/C%20programing%20notes/"/>
    <id>https://godofl.github.io/2021/11/13/C%20programing%20notes/</id>
    <published>2021-11-13T14:44:59.826Z</published>
    <updated>2021-11-16T15:55:14.731Z</updated>
    
    <content type="html"><![CDATA[<h1 id="函数调用"><a href="#函数调用" class="headerlink" title="函数调用"></a>函数调用</h1><h2 id="递归"><a href="#递归" class="headerlink" title="递归"></a>递归</h2><p><strong>学长分享了一段话给我，这段话对你们学习递归非常有帮助:</strong><br><strong>递归:</strong><br><strong>如果你不懂得什么是递归，请参考递归。</strong></p><h1 id="字符串IO"><a href="#字符串IO" class="headerlink" title="字符串IO"></a>字符串IO</h1><h2 id="gets-函数和puts-函数"><a href="#gets-函数和puts-函数" class="headerlink" title="gets()函数和puts()函数"></a>gets()函数和puts()函数</h2><h3 id="gets-函数"><a href="#gets-函数" class="headerlink" title="gets()函数"></a>gets()函数</h3><p>gets()函数简单易用，遇到换行符会丢弃换行符，储存其他字符。</p><h3 id="puts-函数"><a href="#puts-函数" class="headerlink" title="puts()函数"></a>puts()函数</h3><p>puts()函数常和gets()函数配对使用，该函数会在结尾添加换行符。</p><p>以下代码将简单的告诉我们两个函数的用法:</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> STLEN 81</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> words[STLEN];</span><br><span class="line"></span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">&quot;Enter a string, please.&quot;</span>);</span><br><span class="line">    gets(words);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Your string twice:\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%s\n&quot;</span>,words);</span><br><span class="line">    <span class="built_in">puts</span>(words);</span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">&quot;Done.&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>下面是某些编译器的运行示例:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Enter a string, please.</span><br><span class="line">I want to learn about string theory!          //输入</span><br><span class="line">Your string twice:</span><br><span class="line">I want to learn about string theory!</span><br><span class="line">I want to learn about string theory!</span><br><span class="line">Done.</span><br></pre></td></tr></table></figure><p>另一个编译器的运行示例:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Enter a string, please.</span><br><span class="line">warning: this program uses gets(), witch is unsafe.</span><br><span class="line">Oh, no!                                              //输入</span><br><span class="line">Your string twice:</span><br><span class="line">Oh, no!</span><br><span class="line">Oh, no!</span><br><span class="line">Done.</span><br></pre></td></tr></table></figure><p>出现该现象的原因是因为gets()函数不会检查数组是否装的下一行，输入过长的数组会导致<strong>缓冲区溢出</strong>(<em><strong>buffer overflow</strong></em>)，多余的字符可能会占用已经使用的内存，导致程序异常终止。(C11标准中废除了gets()函数)。</p><h2 id="fgets-函数和fputs-函数"><a href="#fgets-函数和fputs-函数" class="headerlink" title="fgets()函数和fputs()函数"></a>fgets()函数和fputs()函数</h2><h3 id="fgets-函数"><a href="#fgets-函数" class="headerlink" title="fgets()函数"></a>fgets()函数</h3><p>fgets()函数可以输入三个参数：<br>①第二个参数指明读入字符的最大数量，假设参数为n，那么将读入n-1个字符，或者读入到一个换行符为止。<br>②第三个参数指明要<strong>读入</strong>的文件，如果从键盘中读取数据，则以stdin作为参数。<br>③fgets()函数会读取换行符，而不是丢弃。</p><h3 id="fputs-函数"><a href="#fputs-函数" class="headerlink" title="fputs()函数"></a>fputs()函数</h3><p>fgets()函数可以输入两个参数:<br>①第二个参数指明要<strong>写入</strong>的文件，如果想显示在屏幕上，应使用stdout作为参数。<br>②通常与fgets()函数配对使用。<br>以下两个代码将简单告诉我们两个函数的用法:</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> STLEN 14</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> words[STLEN];</span><br><span class="line"></span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">&quot;Enter a string, please.&quot;</span>);</span><br><span class="line">    fgets(words,STLEN,<span class="built_in">stdin</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Your string twice (puts(), then fputs()):\n&quot;</span>);</span><br><span class="line">    <span class="built_in">puts</span>(words);</span><br><span class="line">    <span class="built_in">fputs</span>(words,<span class="built_in">stdout</span>);</span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">&quot;Enter another string, please.&quot;</span>);</span><br><span class="line">    fgets(words,STLEN,<span class="built_in">stdin</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Your string twice (puts(), then fputs()):\n&quot;</span>);</span><br><span class="line">    <span class="built_in">puts</span>(words);</span><br><span class="line">    <span class="built_in">fputs</span>(words,<span class="built_in">stdout</span>);</span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">&quot;Done.&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>以下为该程序的输出示例:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">Enter a string, please.</span><br><span class="line">apple pie                                  //输入</span><br><span class="line">Your string twice (puts(), then fputs()):</span><br><span class="line">apple pie</span><br><span class="line"></span><br><span class="line">apple pie</span><br><span class="line">Enter another string, please.</span><br><span class="line">strawberry shortcake                       //输入</span><br><span class="line">Your string twice (puts(), then fputs()):</span><br><span class="line">strawberry sh</span><br><span class="line">strawberry shDone.</span><br></pre></td></tr></table></figure><p>第一次的输入结果就不说了，第二次结果是因为输入的字符串超过了大小限制，所以只读入了未超过限制的字符。<br>注意：fgets()函数在读到文件末尾时，会返回<strong>空指针<a href="%E7%A9%BA%E5%AD%97%E7%AC%A6%E4%B8%BA%E6%95%B4%E6%95%B0%E7%B1%BB%E5%9E%8B%EF%BC%8C%E7%A9%BA%E6%8C%87%E9%92%88%E4%B8%BA%E6%8C%87%E9%92%88%E7%B1%BB%E5%9E%8B%E3%80%82">^1</a></strong>(<em><strong>null pointer</strong></em>),可以用数字0代替，在C语言中用宏NULL代替更常见。</p><h2 id="gets-s-函数"><a href="#gets-s-函数" class="headerlink" title="gets_s()函数"></a>gets_s()函数</h2><h3 id="gets-s-函数-1"><a href="#gets-s-函数-1" class="headerlink" title="gets_s()函数"></a>gets_s()函数</h3><p>gets_s函数只有两个参数:<br>①因为gets_s只从标准输入中读取数据，所以不用第三个参数<br>②gets_s读取到换行符回将其丢弃<br>③如果gets_s没有读取到换行符，则会把目标数组中的首字符设置为空字符，读取并丢弃随后的输入直至读到换行符或者文件结尾，然后返回空指针，接着调用依赖实现的”处理函数”(或你选择的其他函数)，也可能会中止或者推出程序。<br><strong>该函数为C库可选扩展</strong>，有兴趣的可以进行深入学习。<br>以下代码简单告诉该函数的一种用法:</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">char</span> *<span class="title">s_gets</span><span class="params">(<span class="keyword">char</span> *st,<span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> *ret_val;</span><br><span class="line">    <span class="keyword">int</span> i=<span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    ret_val = fgets(st,n,<span class="built_in">stdin</span>);</span><br><span class="line">    <span class="keyword">if</span>(ret_val)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">while</span>(st[i] != <span class="string">&#x27;\n&#x27;</span> &amp;&amp; st[i] != <span class="string">&#x27;\0&#x27;</span>)</span><br><span class="line">            i++;</span><br><span class="line">        <span class="keyword">if</span>(st[i] == <span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line">            st[i] = <span class="string">&#x27;\0&#x27;</span>;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="keyword">while</span>(getchar() != <span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ret_val;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="scanf-函数"><a href="#scanf-函数" class="headerlink" title="scanf()函数"></a>scanf()函数</h2><p>scanf()函数遇到空白字符(空行，空格，制表符或者换行符)时结束，所以scanf()函数非常像读取单词的函数。<br>下列表格简单的介绍scanf()函数的读取情况<br>输入语句|输入序列|变量中的内容|剩余输入序列<br>-|-|-|-<br>scnaf(“%s”,name);|Fleebert Hup|Fleebert| Hup<br>scnaf(“%5s”,name);|Fleebert Hup|Fleeb|ert Hup<br>scnaf(“%5s”,name);|Ann Ular|Ann| Ular</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;函数调用&quot;&gt;&lt;a href=&quot;#函数调用&quot; class=&quot;headerlink&quot; title=&quot;函数调用&quot;&gt;&lt;/a&gt;函数调用&lt;/h1&gt;&lt;h2 id=&quot;递归&quot;&gt;&lt;a href=&quot;#递归&quot; class=&quot;headerlink&quot; title=&quot;递归&quot;&gt;&lt;/a&gt;递归&lt;/h</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>First Test</title>
    <link href="https://godofl.github.io/2021/11/12/First%20Test/"/>
    <id>https://godofl.github.io/2021/11/12/First%20Test/</id>
    <published>2021-11-12T09:16:11.979Z</published>
    <updated>2021-11-15T10:52:02.304Z</updated>
    
    <content type="html"><![CDATA[<h1 id="通信考试试题"><a href="#通信考试试题" class="headerlink" title="通信考试试题"></a>通信考试试题</h1><h2 id="选择"><a href="#选择" class="headerlink" title="选择"></a>选择</h2><p>一.单项选择<br>1、无线电频谱是电磁波频谱的一部分，从3Hz到3000Hz的电磁波称为无线电波。ITU把无线电频谱划分为（  B  ）个频带。<br>  A.13      B.12      C.11       D.10<br>2、调制的主要功能之一是搬移和变换信号的频谱。调制的第一个目的是（  A  ）。<br>  A.提高信号的频率     B.扩大信道的传输能力  C.增强信号传输的抗干扰能力      D.缩短信号传输的时间<br>3、第二代无绳电话系统的手机既可以在家里和办公室里用，也可以在公众场所用，其最大缺点是（  C  ）。<br>  A.不能双向呼叫  B.不能传输数据   C.不能漫游   D.不能实时通话<br>4、光纤通信是由科学家（  D  ）发明的，他被称为“光纤之父”。<br>  A马瑞尔   B凯克    C贝尔    D高锟<br>5、《通信工程导论》本书将采用5层协议的体系结构进行讲述，这5层分别是:应用层、运输层、网络层、数据链路层和物理层。其中TCP协议是（ B ）的协议。<br>A.应用层   B.运输层    C.网络层     D.数据链路层<br>6.同步分为几种（  B  ）<br>  A.3种    B.4种   C.5种   D.2种<br>7.多路复用技术包括频分复用、时分复用、码分复用、（   C  ）等。<br>  A.平分复用  B.多分复用 C.空分复用  D.多址复用<br>8.差错控制技术可以分为几类（  A  ）。<br>  A.4类   B.3类   C.2类    D.5类<br>9.电磁波的传播可以分为直射波，地波和（  C  ）<br>  A.横波  B.纵波  C.天波   D.电离波<br>10.电信号是反映（  A  ）的变化。<br>  A.消息  B.速度  C.频率  D.信号质量<br>11.通信按照发展历程一般可以分为古代通信、近代通信和（  D  ）<br>A:未来通信 B:数字通信 C:模拟通信 D:现代通信<br>12.1889年，美国人 （  B  ）发明了世界上第一台步进制自动电话交换机。<br>A.赫兹    B.史端乔  C.法拉第     D.奥斯特<br>13.用莫尔斯码发送一个划需要几个单位时间（   C   ）.<br>A． 1 B. 2  C. 3  D. 4<br>14.要求比特符号对齐的同步属于(   A  )<br>A.位同步    B.群同步   C.网同步     D.波同步<br>15.下列不属于电磁波传播的是(   C  )。<br>A．天波 B. 地波 C. 曲线波 D. 光波<br>16.电磁波在多少范围内称为无线电波(  D  )。<br>A．3Hz-3GHz   B．3Hz-30GHz   C．3Hz-300Hz    D．3Hz-3THz<br>17.下列说法<strong>错误</strong>的是（  C  ）。<br>A.世界上第一条商业5针电报系统是于1838年由威特斯和库克发明的。<br>B.模拟信号的语音和图像信号的电压都可以连续取值。<br>C.信号按其频谱占用的频带位置不同，可以区分为基带信号和低通信号。<br>D.数字信号的码元传输速率的单位是波特。<br>18.数字通信的主要技术优点是(   D   )<br>A.适应性和经济性好<br>B.输出信噪比高<br>C.频带利用率高<br>D.抗干扰能力强且噪声不积累<br>19.电磁波的三类散射传播方式有（  C  ）、对流层散射、流星余迹散射<br>A.分子散射 B.大气散射 C.电离层散射 D.廷德尔散射<br>20.第一个实用的静电电报系统于1816年由（  A  ）发明的。<br>A.罗纳尔兹    B.豪斯      C.贝尔     D.安培<br>21.分析周期性信号的数学工具是(  C  ) 。<br>   A.傅里叶变换  B.信息论    C.傅里叶级数  D.离散数学<br>22.通信原理是通信工程、电子信息工程、信息安全、(  C  )与数字技术等专业的一门重要的专业课程<br>   A.数据信号    B.物联网工程C.空间信息   D.网络工程<br>23.不同于模拟信号的另一类信号成为数字信号。数字信号又称为（  C  ）<br>   A.数信号     B.非物理信号   C.离散信号   D.聚合信号<br>24.第二代<strong>无绳电话</strong><a href="%E7%94%B1%E5%9B%BA%E5%AE%9A%E6%9C%BA%E5%92%8C%E7%A7%BB%E5%8A%A8%E6%9C%BA%E4%B9%8B%E9%97%B4%E7%9A%84%E8%BF%91%E8%B7%9D%E7%A6%BB%E6%97%A0%E7%BA%BF%E7%94%B5%E6%94%B6%E5%8F%91%E8%AE%AF%E5%8F%B7%E6%9D%A5%E6%9E%84%E9%80%9A%E9%9F%B3%E7%9A%84">^1</a>的最大缺点是（  C  ）<br>   A.不能通信        B.不能联网       C.不能漫游       D.信号利用率低<br>25.电子线路中有源器件是构成电子线路的主体，其中包含（  D  ）<br>   A.半导体          B.晶体二极管     C.集成电路    D.以上都有<br>26.多路独立信号在一条链路上传输的多路通信技术被称为（   D  ）技术。<br>   A.码分复用        B.空分复用       C.极化复用    D.多路复用<br>27.哪种通信技术不属于微波通信（  C  ）<br>   A.移动通信        B.卫星通信       C.光纤通信    D.微波中继通信<br>28.为了模拟用户线上传输，需要先使用（  A  ）<br>   A.调制解调器      B.连上互联网     C.创造模拟另一个用户   D.固定网络<br>29.在信道中，干扰电信号通常称为（  A  ）<br>    A.噪声            B.杂音           C.杂声        D.噪音<br>30.中国最早用烽火台传递信息，有著名的烽火戏诸侯的故事，这种通信方式属于（  B ）。<br>A、运动通信  B、光通信 C、声音通信  D、电磁波通信<br>31.1820年丹麦著名科学家（  C ）发现了电流的磁效应，即电流产生磁场。<br>A、牛顿 B、麦克斯韦 C、奥斯特  D、法拉第<br>32.消息中包含的有效内容，即（  A  ）。<br>A、信息 B、信道 C、频谱 D 、频率<br>33.（  B  ）是随时间变化的电压或电流。<br>A、信号波形 B、电信号 C、光信号 D、雷达信号<br>34.（  C  ）的主要功能之一是搬移和变换信号的频谱。<br>A、解调 B、编码  C、调制 D、解码<br>35.电话机的发展从磁石电话机、公共式电话机、拨号盘式电话机、直到目前应用广泛的（   D  ）。<br>A、转盘式电话机  B、大哥大  C、电报机 D、按键式电话机<br>36.现代移动通信要求能够实现（   C  ）。<br>A、1W  B、3 W  C、5 W  D、7 W<br>37.第一代蜂窝网采用（   A  ）调制体制。<br>A、模拟  B、数字   C、复合 D、多重<br>38.通信系统优劣的重要衡量标准有（  D   ）。<br>A、有效性  B、可靠性   C、安全性  D、A和B<br>39.<strong>天线的极化</strong><a href="%E5%A4%A9%E7%BA%BF%E6%9E%81%E5%8C%96%E6%98%AF%E6%8F%8F%E8%BF%B0%E5%A4%A9%E7%BA%BF%E8%BE%90%E5%B0%84%E7%94%B5%E7%A3%81%E6%B3%A2%E7%9F%A2%E9%87%8F%E7%A9%BA%E9%97%B4%E6%8C%87%E5%90%91%E7%9A%84%E5%8F%82%E6%95%B0">^2</a>分为（   D  ）、圆极化和椭圆极化。<br>A、方极化  B、扁极化  C、面极化  D、线极化<br>40.现代通信的基本特征是什么（  A  ）<br>A.数字化    B.数据化   C.结构化   D一体化<br>41.1867年，（  B  ）利用电磁感应原理发明的电话。<br>A莫尔斯   B贝尔   C马可尼   D法拉第<br>42.下列哪个不属于通信的历史发展的三个阶段之一（  C  ）<br>A.古代通信   B.近代通信   C.近现代通信   D.现代通信<br>43.下列哪个不属于通信系统三大部分（  B  ）<br>A.信道   B.传输设备   C发送设备   D接收设备<br>44.下列哪个不属于天线的极化（  D  ）<br>A线极化 B圆极化 C椭圆极化 D水平极化<br>45.简单邮寄传送协议（  A  ）<br>A.    SMTP  B.POP3  C.HTTP  D.FTP<br>46.下列哪个国家没有自主研发的卫星系统（  B  ）<br>A.中国   B.日本   C.美国   D.俄罗斯<br>47.下列哪个不属于天线的主要性能（  D  ）<br>A方向性 B增益 C效率 D目的性<br>48.蓝牙的工作波段（  B  ）<br>A.2340~2402MHz   B.2402~2480MHz C.2480~2540MHz  D.2540~2602MHz<br>49.<strong>CDMA系统</strong><a href="CDMA%E9%80%9A%E4%BF%A1%E7%B3%BB%E7%BB%9F%E9%87%87%E7%94%A8%E5%85%88%E8%BF%9B%E7%9A%84%E6%89%A9%E9%A2%91%E6%8A%80%E6%9C%AF%EF%BC%8C%E5%AE%9E%E7%8E%B0%E4%BA%86%E7%A0%81%E5%88%86%E5%A4%9A%E5%9D%80%E7%9A%84%E5%BA%94%E7%94%A8%E7%B3%BB%E7%BB%9F">^3</a>中的反应快速功率控制（  C  ）<br>A.开环的 B双环的 C闭环的 D多环的<br>50.在无线信道中收发天线之间的信号传输是利用电磁波在空间传播实现的。其中电磁波的存在是( B )预言的。<br>A.赫兹    B.麦克斯韦   C.法拉第     D.奥斯特<br>51.数字信号传输速率是按每秒传输多少个码元计算的，码元速率的单位是( B ).<br>A.比特    B.波特      C.赫兹      D.分贝<br>52.以下属于<strong>恒参信道</strong><a href="%E6%81%92%E5%8F%82%E4%BF%A1%E9%81%93%E7%9A%84%E7%89%B9%E6%80%A7%EF%BC%88%E5%8F%82%E6%95%B0%EF%BC%89%E4%B8%8D%E9%9A%8F%E6%97%B6%E9%97%B4%E5%8F%98%E5%8C%96">^4</a>的是（  A  ）.<br>A．微波中继信道B．微波对流层散射信道C．超短波电离层散射信道D．短波电离层反射信道<br>53.某件事出现的概率P(X)为1/32,则该事件包含的信息量为( C  )<br>A.3        B.4         C.5      D.6<br>54.下列说法正确的是（ D ）。<br>A．信道与通信电路类似，一条可通信的电路往往包含一个信道<br>B．调制是指把模拟数据转换为数字信号的过程<br>C．信息传输速率是指通信信道上每秒传输的码元数<br>D．在数值上，波特率等于比特率与每符号含的比特数的比值<br>55.影响信道最大传输速率的因素主要有(  A )。<br>A．信道带宽和信噪比  B．码元传输速率和噪声功率  C．频率特性和带宽  D．发送功率和<br>56.噪声功率利用模拟通信信道传输数字信号的方法称为( D )。<br>A．同步传输    B．异步传输    C．基带传输    D．频带传输<br>57.CDMA系统中的反应快速功率控制是（ B ）。<br>A.开环的    B.  闭环的    C.  双环的     D.  多环的<br>58.对通信卫星进行姿态控制和位置控制的是通信卫星中的（ D ）<br>A.天线分系统  B.通信分系统  C.遥测指令分系统  D.控制分系统<br><font color=#FF0000>59.如果一个网络运营商分别有15MHz的在上、下行频宽，那么他可以获得多少个GSM频点（减去一个保护频点）（ D ）<br>A. 600  B.599   C.75   D.74 </font><br /><br>60.周幽王火戏诸侯中的火属于(  A  )。<br>   A.光通信    B.声通信    C.运动通信     D.电通信<br>61.1820年丹麦著名科学家（  C  ）发现了电流的效应。<br>   A.贝尔     B.马可尼     C.奥斯特    D.莫尔斯<br>62.信息量以消息的不确定性来衡量，信息量的单位是（  C  ）。<br>   A.赫兹     B.分贝    C.比特    D.波特<br>63.在一条路上不同时间传输不同用户的数字信号称为(  D   )。<br>A.极化复用     B.码分复用    C.空分复用    D.时分复用<br>64.ITU把无线电谱划分为（  B  ）个频带。<br>   A.10     B.12    C.11    D.13<br>65.世界第一台自动电话交换机是（  A ）发明的。<br>A.史端乔   B.贝尔   C.克鲁姆   D.麦克斯韦<br>66.下列不属于有线信道的是（   A   ）。<br>A.电磁波    B.架空明线    C.对称电缆    D.同轴电缆<br>67.可以将十进制数字“12”写为八进制数字（  B  ）。<br>A.1100    B.14     C.10     D.16<br>68.超级高频的频率范围（  A    ）。<br>A.300~3000GHz    B.300~3000MHz   C.30~300GHz   D.300~3000Hz<br>69.天线有（  C ）个基本性能。<br>A.1     B.2     C.3      D.4<br>70.CDMA800M的接收频段是多少？(  C  )<br>（A）890-915 MHz （B）935-960 MHz （C）824-849 MHz （D）869-894 MHz<br>71.在IS95-A的CDMA800中HPA的最大输出功率是：(  B  )<br>（A）10W （B）20W （C）30W （4）40W<br>72.以下那个子系统不在<strong>BTS</strong><a href="%E5%9F%BA%E7%AB%99%E6%94%B6%E5%8F%91%E5%8F%B0">^5</a>内：(  A  )<br>A、CPS<a href="%E4%BF%A1%E6%81%AF%E7%89%A9%E7%90%86%E7%B3%BB%E7%BB%9F">^6</a>   B、BDS<a href="%E5%8C%97%E6%96%97%E5%8D%AB%E6%98%9F%E5%AF%BC%E8%88%AA%E7%B3%BB%E7%BB%9F">^7</a>   C、RFS   D、TFS<a href="%E5%85%A8%E9%83%A8%E6%89%81%E5%B9%B3%E5%8C%96%E7%9A%84%E6%95%B0%E6%8D%AE%E7%BB%84%E7%BB%87%E7%BB%93%E6%9E%84">^8</a><br>73.完成PCM编码与QCELP编码之间的变换功能是下列那块单板：(  B )<br>A、SVICM B、SVM C、CDSU D、CHM<br>74.CDMA 系统中使用PN 短码的速率是 ( B )<br>A 5MHZ B 1.2288MHZ C 1.25MHZ<br>75.CDMA系统前向的（ A ）插入功率控制子信道<br>A业务信道 B寻呼信道 C同步信道 D导频信道<br>76.向CDMA 信道中每一帧的帧长（ A  ）<br>A 20MS B 40MS C 80MS<br>77.接收设备的功能是放大和反变换(如滤波、译码、解调等)，其目的是从受到干扰和减损的接收信号中正确恢复出( A )<br>A.原始电信号B数字信号C.模拟信号D.基带信号<br>78.数字通信的主要技术优点是(  D  )<br>A.适应性和经济性好B.输出信噪比高C.频带利用率高D.抗干扰能力强且噪声不积累<br>79.香农公式给出了通信系统所能达到的信息传输速率是( D )<br>A.平均信息传输速率B.最低信息传输速率C.中间信息传输速率D.极限信息传<br>80.古代通信是基于视觉或听觉的（  A  ）通信。<br>A.图文      B.图像        C.数据         D.图文<br>81.（  B  ）年莫尔斯和韦尔发明出电磁电报。<br>A.1827       B.1837         C.1847          D.1857<br>82.CDMA系统中的反应快速功率控制是（ B ）。<br>A.开环的    B.闭环的      C.双环的       D.多环的<br>83.下列哪种通信不属于微波通信（ D ）。<br>A. 移动通信 B.卫星通信    C.微波中继通信 D.光纤通信<br>84.数字信号传输速率是按每秒传输多少个码元计算的，码元速率的单位是( B )。<br>A.比特    B.波特      C.赫兹      D.分贝<br>85.群同步又称字同步或（ B ）<br>A.位同步   B.帧同步  C.码元同步  D.网同步<br>86.（  A ）是利用不同的编码 区分不同用户的消息<br>A.码分复用 B.空分复用 C.极化复用  D.多路复用<br>87.移动台在转换到相邻基站的瞬间立即切断和原基站的联系,则称为（ D ）<br>A.漫游  B.软切换  C.移动台 D.硬切换<br>88.ITU把无线电频谱划分为（ B ）个频带<br>A.11   B.12   C.13   D.14<br>89.电磁波是由( D )用实验证明出来的<br>A.法拉第 B.麦克斯韦 C.莫尔斯 D.赫兹<br>90.(  B  )是处理通信信号的最重要的手段之一。<br>A.解调     B.调制      C.调试      D.测试<br>91.中国是时间上最早使用密码的国家之一，当年最难破解的”密电码”发明人是我国著名抗倭将领(  D  )。<br>A.郑成功     B.林则徐    C.曾国藩    D.戚继光<br>92.(  A  )是使信息载体（载波）的某些特性随信息变化的过程，并能使所要传送的信息适合于信道的特性，达到最有效和最可靠的传输。<br>A.调制 B、信道编码 C.信源编码 D.扩频<br>93.移动通信使用的中频频段的频率范围为(  B   )。<br>A. 3～30kHz B. 300～3000kHz C. 3～30MHz D. 30～300MHz<br>94.系统中采用的多址接入技术是(  D  )方式。<br>A. FDMA   B. TDMA    C. FDMA/CDMA    D. FDMA/TDMA<br>95.ITU把无线电频谱划分为(  C  )个频带。<br>A.10     B.11     C.12     D.13<br>96.SDH网络中对于双向环复用段倒换既可用2纤方式也可用4纤方式，而对于通道倒换环只用(  A  )方式。<br>A.2纤    B.3纤     C.4纤     D.5纤<br>97.ADM是一个(  B  )设备，它的输出和输入均为STM-N光信号，支路信号可以是准同步的，也可以是同步的。<br>A.四端口    B.三端口    C.二端口    D.单端口<br>98.移动通信的通信类型有移动电话，移动数据，移动多媒体通信，(  A  )<br>A.无限寻呼     B.双工通信    C.自组织网           D.无绳电话<br>99.基本的调制类型有几种(  B  )。<br>A.2    B.3    C.4    D.5<br>100.通信系统除了在发送方和接收方需要有发送设备和接受设备，还必须有连接发送方和接收方的通信线路。为了提高线路的利用率，可以由开关控制，在同一对线路上，不同时间，向不同方向发报，这种线路称为（  C  ）线路。<br>A．单工      B.双工      C.半双工    D.全双工<br>101.数字信号的相位瞬时值相对其当时的理想值的动态偏离是指（  B  ）<br>   A.频率偏离     B.相位抖动    C.谐波失真   D.信道干扰<br>102.最基本的面天线是（  C  ），其基本结构包括主反射面、馈源和支架。<br>   A.八木天线     B.对称振子天线    C.抛物面天线   D.卡塞格伦天线<br>103.有一种密码的密钥有两部分，一部分为公开部分，另一部分为秘密部分，收发的两个用户不再公用一个密钥，这种密码称为（  A  ）<br>   A.公钥密码    B.单密钥密码   C.替代密码    D.置换密码<br>104.（  D  ）交换机，又称为史瑞乔交换机，由美国人A.B.史瑞乔于1889年发明，1891年由德国西门子公司改进并投入生产使用。<br>A．纵横式交换机   B.程控交换机   C.网络交换机  D.步进制交换机<br>105.下列哪一项不是对4G提出的基本要求（  C  ）<br>A．必须基于全IP分组交换网<br>B．信道宽度可以在5~20MHz间调整，也可以调整到高达40MHz<br>C．能够静态地共享网络资源，以支持每个小区中有更多的同时通信的用户<br>D．在室内，系统频谱利用率下行达到3b/s/Hz/cell，上行达到2.25b/s/Hz/cell<br>106.差错控制的性能分为（  A  ）和纠错两种。<br>     A．检错    B.检错重发   C.前向纠错    D.检错删除<br>107.莫尔斯电码表中字的间隔为（  B  ）单位时间。<br>     A．1     B.3      C.5      D.7<br>108.美国数学家（  B  ）于1948年发表的一篇里程碑性的、为通信理论奠基的论文《通信的数学理论》中，用概率论作为数学工具，以消息的不确定性定义信息量，以此来度量信息中信息的多少。<br>     A.麦克斯韦   B.香农    C.维纳    D.皮尔斯<br>109.扩频调制是指已调信号带宽远大于调制信号带宽的任何体制，采用扩频调制的目的不包括以下哪一项（  D  ）<br>A．提高抗窄带干扰的能力<br>B. 将发射信号隐藏在背景噪声中，防止窃听<br>C. 提高抗多径传输效应的能力<br>D. 提供多个用户公司用不同频带的可能</p><h2 id="多选"><a href="#多选" class="headerlink" title="多选"></a>多选</h2><p>1.电磁波的传播可以分为哪几类(  ACD  )<br>  A.直射波  B.斜射波  C.地波  D.天波<br>2.天线的主要性能包括(  ABC ）<br>  A.方向性  B.增益  C.效率  D.准确性<br>3.天线的极化分为( BCD )<br>  A.水平极化  B.线极化  C.圆极化  D.椭圆极化<br>4.专业基础课程通信工程专业所需要的基础课程，这些课程有（ ABCD ）。<br>  A.电路类  B.电场类  C.系统类  D.计算机类<br>5.下列有关通信工程专业导论知识中正确的是（ AD ）。<br>  A.调制的主要功能之一是搬移和变换信号的频谱。<br>  B.我国长途电话采用一级结构，二级交换中心设在各省会、自治区和中央直辖市。<br>  C.第一代蜂窝网采用数字调制体制，第二代蜂窝网采用模拟调制体制。<br>  D.通信工程专业关注的是通信过程中的信息传输和信号处理的原理及应用。<br>6.模拟信号数字化需要经过（  A  ），（  B  ）和（  D  ）三个步骤。<br>  A．取样     B.量化    C.输出   D.编码<br>7.以下哪几个是多址技术（  ABC  ）<br>  A.FDMA   B.TDMA  C.CDMA   D.RDMA<br>8.差错控制技术包括（  ABD  ）<br>  A．前向纠错  B.检错重发  C.反向纠错 D.检错删除<br>9.信源压缩编码的目的是（  AC  ）<br>  A.提高信号的有效性  B.用户数据加密 C.减小信号的冗余度  D.解决衰落坑的影响<br>10.中国是世界上最早使用密码的国家之一，当年最难破解的“密电码”也是中国人发明的，与其无关的人物有（ACD）<br>  A.谭纶  B.戚继光  C.郑成功  D.曾国藩<br>11.目前在民用无线电通信中，应用最广的是（  AB  ）。<br>    A.蜂窝网      B.卫星通信  C.移动通信 D.对层流散射通信<br>12.差错控制技术分为（  ABCD  ）<br>    A.检错重发    B.前向纠错  C.反馈校验 D.检错删除<br>13.信号有很多种，可以分为（  BD  ）两大种。<br>       A.声波信号    B.电信号    C.非声波信号D.非电信号<br>14.信道解调包括（  ACD  ）解调功能。<br>   A.QPSK        B.ADSL      C.OAM        D.VSB<br>15.下列说法正确的是（  ABD  ）<br>   A.无线电话工作频率的范围是有限的<br>   B.最常用的数字信号是二进制数字。<br>   C.BP机不仅能接受信息还能恢复电话<br>   D.第二代无绳电话系统采用数字技术。<br>16.频谱一词最早用于光学，在可见光谱中频率最低和最高的是（  AB  ）。<br>    A 红光 B紫光 C绿光 D橙光<br>17.分析周期性信号的数学工具是（  A  ）。<br>    A 傅里叶级数 B 纵横制接线器 C 傅里叶变换器 D 内置式调解器<br>18.信道输入信号的频谱经过信道传输后产生平移的称为（  C ）,数字信号的相位瞬时值发生动态偏离称为（  D  ）。<br>    A 变参信道 B调制信号 C 频率偏移 D 相位抖动<br>19.电子线路中有源器件是构成电子线路的主体，其中包含有（  B   ）。<br>    A.电阻 B.晶体三极管 C.电容 D.电感<br>20.场效应管包含的电极有（   ACD  ）。<br>    A.源极 B.基极 C.栅极 D.漏极<br>21.信道分为两大类（  CD  ）<br>A.散射信道  B.物理信道  C.有线信道  D.无线信道<br>22.将模拟输入信号变为数字信号的过程包括三个步骤（  ABD  ）<br>    A.抽样  B.量化  C.输入  D.编码<br>23.天线的主要性能有（  ABC  ）<br>    A.方向性  B.增益  C.效率  D.接收<br>24.电磁波的传播可分为（  BCD  ）<br>    A.衍射波  B.直射波  C.地波  D.天波<br>25.差错控制技术可以分为（  ABCD  )<br>    A.    检错重发  B.前向纠错  C.反馈校验  D.检错删除<br>26.多址技术包括（  BCD  ）<br>    A.复用多址  B.频分多址  C.时分多址  D.码分多址<br>27.变参信道具有的共同特点（  ABD  ）<br>    A.传输衰减随时间而变  B.传输时延随时间而变  C.传输变化很小  D.存在多径传播现象<br>28.以下选项是对移动通信的要求的是（  ACD  ）<br>    A.任何时间  B.任何物品  C.任何地点  D.任何方式<br>29.公共交换电话网可以分为（  BD  ）<br>    A.移动电话网  B.本地电话网  C.国际电话网  D.长途电话网<br>30.早期出现的通信方式包括（  ABC  ）<br>    A.    光通信  B.运动通信  C.声通信  D.数字通信<br>31.移动通信有哪些工作方式？( BCD )<br>    A.半公通信  B.单工通信    C.半双工通信   D.双工通信<br>32.信号按其频谱占用的频带位置不同，可以分为哪几种信号？( AC )<br>    A.基带信号  B.数字信号    C.带通信号     D.模拟信号<br>33.散射传播分为哪几类？( ABD )<br>  A.电离层散射B.对流层散射  C.大气层散射   D.流星余迹散射<br>34.模拟信号数字化的过程中包括哪三个步骤？( ABC )<br>    A.抽样  B.量化  C.编码  D.同步<br>35.信道分为哪两大类？( AC )<br>    A.有线信道   B.模拟信道   C.无线信道   D.光导信道<br>36.(  AB  )属于古代通信的范畴。<br>A: 击鼓鸣金     B: 飞鸽传书     C: 电报机     D: 电话机<br>37.常用于干线微波中继通信的频段有哪些（  AB  ）。<br>    A: 2GHz    B: 6GHz    C: 18GHzD: 13GHz<br>38.以下哪些属于电磁波（  ABCD   ）。<br>   A: X射线    B: 微波    C: 无线电波    D: 光波<br>39.固定电话业务分为（   ABD  ）  。<br>   A：固定网本地电话业务    B：固定网国际长途电话业务    C：固定网农村电话业务     D：固定网国内长途电话业务 E、固定网城市电话业务<br>40.数字通信过程包括（   ABC   ）。<br>  A：发送端的模/数变换    B：信道传输 C：接收端的数/模变换 D：低通 E：再生<br>41.哪两位科学家为电磁电报的肇始做出巨大贡献（  AD  ）<br>A.伏特                  B.沃森                  C.莫尔斯               D.安培<br>42.将模拟输入信号的变为数字信号的过程包括（ ACD   ）<br>A.抽样                  B.转换                  C. 编码                D. 量化<br>43.5G将工作分为（  ABD  ）毫米波段<br>A.28                     B.60                      C.25                     D.38<br>44.在无线数据通信网中，分别有无线个人网，（  B ）和（  C  ）<br>A.无线区域网        B.无线城域网        C.无线局域网        D.无线市域网<br>45.与IP协议配套的三个协议为（  BCD  ）<br>A.地址公开协议    B.地址解析协议    C.网际控制报文协议    D.网际组管理协议<br>46.为了保证通信的可靠性，通常每个通信系统都需要设置一个密码，该密码有两种，分别是(A〉和〈C〉<br>A,单密钥密码    B,数字密码     C,双密钥密码    D,自定义密码<br>47.区块链是有许多区块链接成的数据库，其特点是去中心化，信息不可篡改，〈A〉，〈B〉和〈D〉<br>A,公开   B,透明   C,访问有偿   D,匿名性<br>48.数据通信网按照覆盖范围区分，可以分为〈B〉，〈C〉和〈D〉，以及互联网，除此之外还有个人网<br>A,体域网   B,局域网   C,域域网   D,广域网<br>49.互联网的体系结构有五层，分别是〈 A 〉，〈 B 〉，〈 C 〉，数据链路层和物理层<br>A,应用层   B,运输层   C,网络层   D,通信层<br>50.目前，全世界已经有4个卫星导航系统，分别是美国的GPS系统，〈 A 〉，〈 B 〉和(C)<br>A,中国的北斗卫星导航系统   B,俄罗斯的格洛纳斯系统   C,欧洲的伽利略卫星导航系统   D,中国的嫦娥卫星导航系统<br>51.微波通信是使用微波进行的通信，可细分为( BCD )。<br>A.甚高频(VHF)频段     B.特高频(UHF)频段    C.超高频(SHF)频段     D.极高频(EHF)频段<br>52.早期出现的通信方式包括（ ABC ）<br>A.运动通信  B.光通信  C.声通信  D.无线通信<br>53.微波可以分为以下几类（ BCD ）。<br>A.米波  B.分米波  C.厘米波  D.毫米波<br>54.常用于干线微波中继通信的频段有哪些（ AB ）。<br>A.2GHz  B.6GHz  C.18GHz  D.13GHz<br>55.电磁波在地面的基本传播方式有哪些?( ABCD )<br>A.地波传播  B.天波传播  C.直射波  D.散射传播<br>56.天线的主要性能有那些?( ABC )<br>A.方向性  B.增益  C.效率  D.频率<br>57.利用光信号传送消息的手段有哪些（  ABC  ）<br>A.旗语      B.灯塔      C.臂板信号装置     D.次氯酸见光分解<br>58.能应用于导航的频带名有哪些（  BC  ）<br>A.极低频     B.甚低频     C.低频       D.中频<br>59.认证技术包括（  ABD  ）<br>A.消息认证      B.数字签字      C.数字签名     D.身份验证<br>60.IMT-2000的总目标包括（  ACD  ）<br>A.全球化      B.科技化      C.个人化     D.综合化<br>61.天线的极化分为（  ACD  ）<br>A.线极化      B球极化      C.圆极化      D.椭圆极化</p><h2 id="填空"><a href="#填空" class="headerlink" title="填空"></a>填空</h2><p>1.频率比较低（大约2MHz以下）的电磁波趋于沿弯曲的地球表面传播，具有一定的绕射能力，这种传播方式称为（  地波传播  ）。<br>2.早起出现的通信方式包括( 运动通信 )、( 光通信 )、和( 声通信 )。<br>3.无线电报是于1895年由意大利人马可尼发明的，在20实际初期，(  德国  )，(  美国  )先开始试用，但没有得到广泛推广，直到1980年代，(  蜂窝电话网  )的出现，无线电话才逐渐得到广泛应用。<br>4.对于各种信号真正有效压缩的方法是用数学技术进行的，因此对信源来的模拟信号首先需要(   数字化  )，然后对其进行压缩。<br>5.散射现象分为电离层散射、对流层散射和(  流星余迹散射  )三种。其中电离层散射现象发生在(  30~60  )MHz间的电磁波上。<br>6.2G蜂窝网主要有两种标准，即欧洲制定的采用频分多址的(  全球移动通信系统  )标准和美国的码分多址标准IS/-95。<br>7.信源压缩编码的目的是(  减小信号的冗余庹  )，提高信号的有效性，即提高信号的传输效率。<br>8.调制是处理 (  通信信号  )的最重要的手段之一。<br>9.最常用的(  数字信号  )是二进制数字信号。<br>10.将模拟输入信号变为数字信号的过程包括三个步骤:(  抽样  ),(  量化  )和 (  编码  )。<br>11.1800年意大利物理学家（伏特）发明了伏打电池后，人们才开始能够获得持续的电能。<br>12.信号按其频谱占用的频带位置不同，可分为基带信号和（  带通信号  ）。<br>13.（  电传打字机  ）是继波多机之后又一个里程碑式发明。<br>14.无线电话通信又称为（  移动通信  ）。<br>15.在接受端收到已调信号后，需要将其恢复成原调制信号，此恢复过程称为（  解调  ）。<br>16.移动台在转换到相邻基站的瞬间立即切断和原基站的联系，称为（  硬切换  ）。<br>17.（  信源压缩编码  ）的目的是减小信号的冗余度，提高信号的有效性。<br>18.光纤可分为(  单模光纤  )和多模光纤。<br>19.ITU把无线电频谱划分为12个频带，每个频带从波长为（  10  ）的n次幂起<br>20.无线信道利用（  电磁波   ）在空间的传播来传输信号。<br>21.早期出现的通信方式包括（  运动通信  ）、（  光通信  ）、（  声通信  ）。<br>22.1895年（  马可尼  ）成功地进行了无线电报通信试验。<br>23.通信系统的组成包括（  发送设备  ）、（  接收设备  ）、（  信道  ）。<br>24.经典的多路复用方式包括（  频分复用  ）、（  时分复用  ）、（  码分复用  ）。<br>25.公共交换电话网可以分为（  本地电话网  ）、（  长途电话网  ）。<br>26.移动通信的通信业务类型有（  移动电话  ）、（  移动数据  ）、（  移动多媒体通信  ）、（  无线寻呼  ）等。<br>27.蜂窝网在每个小区的中心将一个固定无线电站称为（  基站  ），车载电台和手（持）机称为（  移动台  ）<br>28.通信工程专业基础课程大体可以分为四类，即（  电路  ）类（  电场  ）类（  系统  ）类（  计算机  ）类。<br>29.英国物理学家（  麦克斯韦  ）把数学分析方法带进了电磁学的研究领域，于1865年提出了描述电磁场的基本定律。<br>30.邮件包括函件和包裹两类。传送函件的目的是传送(  信息  )，传送包裹的目的是传送物质。<br>31.第一个实用的静电电报系统于1816年由英国气象学家(  罗纳尔兹  )发明。<br>32.波多电报机能够把信号自动翻译成印刷字符。其主要包括三部分：键盘、(  分配器  )和纸带。<br>33.电话机话筒把声音变换成(  电信号  )，此信号经电话线传输到接收端电话机。<br>34.爱立信公司建立的第一个民用(  蜂窝电话网  )，解决了频道数量限制无线电话广泛使用的问题。<br>35.代表数字信号一个取值的波形成为一个(  码元  )。<br>36.信号按其频谱占用的频带位置不同，可以区分为(  基带信号  )和带通信号。<br>37.通信系统组成包括三大部分，即发送设备、接受设备和(  信道  )。<br>38.在接收设备中有用信号功率和噪声功率之比称为( 信号噪声比  )。<br>39.在接收端收到已调信号后，需要将其接收信号恢复成原调制信号，此恢复过程称为(  解调  )。<br>40.模拟调制类型有(  振幅调制  )、(  频率调制  )、(  相位调制  )。<br>41.将模拟输入信号变为数字信号的过程分为(  抽样  ）、（  量化  ）、（  编码  ）。<br>42.复用法有频分（  多路复用法  ）、（  时分多路复用法  ）、(  码分复用法  )、(  空分复用法  )、（  极化复用法  ）等。<br>43.差错控制技术可分为(  检错重发  )、(  前向纠错  )、(  反馈校验  )、(  检错删除  )四种。<br>44.信源压缩编码的目的是(  减小信号的冗余度，提高信号的有效性  )<br>45.最基本的线天线是(   偶极子（对称振子）  )。<br>46.最普通的面天线是(  抛物面天线  )。<br>47.天线的主要性能有(  方向性  ),(  增益  ), (  效率  )<br>48.第一代无绳电话系统是（  模拟调制机制  )。<br>49.第一代蜂窝网采用(  模拟调制机制  )。<br>50.能够在不同时间，向不同方向发报的线路，称为(  半双工  )线路。<br>51.半双工1895年意大利人(  马可尼  )成功地进行了无线电报通信试验。<br>52.马可尼除了在外层空间两个飞船之间的电磁传播基本上是在(  自由空间  )传播。<br>53.自由空间(  频率偏移  )是指信道输入信号地频谱经过信道传输后产生了平移。<br>54.频率偏移公共交换电话网可以分为本地电话网和(  长途电话网  )电话网两部分。<br>55.长途电话网蜂窝网在每个小区的中心建立一个固定无线电台，称为(  基站  )。基站<br>56.(  增益  )是指天线最强辐射方向的天线辐射强度与参考天线的辐射强度之比取对数。增益<br>57.卫星通信系统一般由通信卫星，通信地球站，(  跟踪遥测及指令系统  )和监控管理系统组成。<br>58.跟踪遥测及指令分系统9.天线用于发射和接收无线电信号。当无线电信号的频率不太高时,多采用(  线天线  )。线天线<br>59.在频带很宽的链路上，可以利用不同的频带传输不同用户的消息这就是频分(  多路复用  )技术。多路复用<br>60.区分模拟信号和数字信号的准则是看其表示信息的(  取值  )是连续的还是离散的。<br>61.信号的频谱必须和它经过传输的线路的(  频率特性  )相应。<br>62.信号按其频谱占用的频带位置不同，可以区分为(  基带信号  )和(  带通信号  )。<br>63.当天线电信号和频率很高时多采用(  面天线  )。<br>64.最早的交换机是(  步进式交换机  )。<br>65.电话和电报通信已经有一百多年的历史，但是(  用纸张作为媒介的邮件  )还是至今必须的通信手段。<br>66.(  电力  )和(  电讯  )两个领域被分别称为“强电”和“弱电”。<br>67.最早的电话机是(  磁石电话机  )，在有了交换机后，电话机就改进成为共电式电话机了。<br>68.无线电报是于(  1876  )年由美国人(  贝尔  )发明的。<br>69.数字信号的码元运输速率的单位是(  波特  )。<br>70.通信工作方式分为 (  单工通信  ) ，(  全双工通信  )，(  半双工通信  )<br>71.网状网又称(  完全互联网  )。<br>72.我国PCM编码位数为( 8 )位。<br>73.单模光纤的纤芯直径(  8-10um  ).<br>74.IPV6将32位的IP地址升级为(  128  )位。<br>75.以(  终端设备  )、(  交换设备为点  )，以(  传输设备为线  )，点、线相连就构成了一个通信网。<br>76.电信业务分为(  基础电信业务和增值电信业务    )。<br>77.语音信号的频率范围为( 300~3400Hz )。<br>78.常用的局域网的网络拓扑结构有(  星型  )、(  环型  )、(  总线型  )。<br>79.数据网中常用的网络互连设备有网关(  集线器  )、(  交换机  )、(  路由器  )  。<br>80.日光通过（ 三棱镜和雨滴 ）后分解成彩虹，彩虹是不同颜色的光从 （ 红光 ） 到（ 紫光  ）构成的光谱。<br>81.信号按其频谱占用的频带位置不同，可以区分基带信号和（ 带通信号 ）。基带信号又称 （ 低通信号 ）  。<br>82.电磁波的传播可以分为（ 直射波 ）、（ 地波 ）和 （ 天波 ）三种。此外，电磁波还可以经过（ 散射方式 ）传播。该传播分为 （ 电离层散射 ）、（ 对流层散射 ）和（ 流星余迹散射 ）三类。<br>83.将模拟输入信号变成数字信号的过程包括三个步骤：（ 抽样 ）、（ 量化 ）和（ 编码 ）。<br>84.多路复用技术分别是（ 频分复用 ）、（ 时分复用 ）、（ 码分复用 ）、（ 空分复用 ）。（答出四种即可）<br>85.通信保密的目的是（ 保证信息传输的安全 ）。密码学是保密通信的泛称，它包括（ 密码编码学 ）和（ 密码分析学 ）两方面。<br>86.通信工程专业的课程设置除了一般公共课程，大体可以分为（ 专业课程 ）、（ 专业基础课程 ）和（ 基础课程 ）三大类。<br>87.专业基础课程主要分为 （ 电学 ）、（ 电磁学 ）和（ 计算机 ）方面的课程。<br>88.天线用于发射和接收无线电信号。当信号的频率不太高时，多采用（ 线天线 ） ；当无线电信号的频率很高时多采用（ 面天线 ） 。<br>89.调制的主要功能之一是（ 搬移 ）和（ 变换信号的频谱 ）。<br>90.信件最早用人力、驿马、信鸽等传送，这称为(  运动通信  )。<br>91.信号按其频谱占用的频带位置不同，可以区分为(  基带  )信号和带通信号。<br>92.信号可以分为(  非电信号 )和(  电信号  )两大类。<br>93.电话是于1876年美国人(  贝尔  )发明的。<br>94.信息量以消息的不确定性来度量。信息量的单位是(  比特  )。<br>95.信号按其频谱占用的频带位置不同，可以区分为基带信号和(  带通信号  )。<br>96.无线信道传输电信号的方式是(  电磁波在空间的传播  )。<br>97.无线电话通信又称(  移动通信  )。<br>98.客观世界是由三类基本要素构成的:物质，能量和(  信息  )。<br>99.通信系统的组成包括三大部分，即发送设备、接收设备和(  信道  )。</p><h2 id="判断"><a href="#判断" class="headerlink" title="判断"></a>判断</h2><p>1.通信系统组成包括三个部分，即发送射备、接受设备和信道（ √ ）<br>2.蜂窝网在每个小区的中心建立一个固定无线电台，称为基站（ √ ）<br>3.按照移动通信工作方式，有单工、半双工、双工通信等（ √ ）<br>4.在接收端收到已调信号后，需要将其恢复成原调制信号，此恢复过程称为解调（ √ ）<br>5.ITU把无线电频谱划分为10个频带（ × ）<br>6.将模拟输入信号变为数字信号的过程包括三个步骤:抽样、量化和编码。( √ )<br>7.公共交换电话网可以分为本地电话网和长途电话网两部分。( √ )<br>8.1887年麦克斯韦用实验方法产生和检测到了电磁波。( × )<br>9.通信原理是通信工程、电子信息工程、信息安全、空间信息与数字计术等专业的一门重要专业课程。( √ )<br>10.早期出现的通信方式包括生物通信、光通信、声通信。 ( × )<br>11.一个正弦波有三个参量即振幅，频率和相位（ √ ）<br>12.通信系统的组成包括四大部分即发送设备，传输设备，接受设备和信道（ × ）<br>13.目前在民用无线电通信中，应用最广泛的是蜂窝网和卫星通信（  √  ）<br>14.在COFDM中每个子频道可以采用正交振幅调制或者相移键控（  √   ）<br>15.移动通信按照组网方式区分，有专线，广播线，集群线，自组织网，群组织网，联通等（ ×  ）<br>16.信息量的单位是比特，码元传输速率的单位是波特。     （  √ ）<br>17.频率较高（大约在2至30MHz之间）的电磁波能够被电离层反射。   （  √ ）<br>18.搬移和变换信号的频率不属于调制的功能。    （ × ）<br>19.模拟信号的电压值不可以是任何数值。    （ × ）<br>20.天线的极化分为线极化、圆极化和椭圆极化。  （  √  ）<br>21.基带信号只有被调制后才能在无线信道中传输。   （  √  ）<br>22.同步分为位同步、群同步和载波同步3种。    （ × ）<br>23.经过调制的信号称为调制信号。  （ × ）<br>24.增益是指天线最强辐射方向的天线辐射强度与参考天线的辐射强度之比取对数。  ( √ )<br>25.高频信号可以应用于无信通信、广播和电视。  （ √ ）<br>26.电磁电报由美国莫尔斯和韦尔发明的。（ √ ）<br>27.解调通常利用调制技术把来自信源的基带信号的频谱搬移到更高的频率范围。（ × ）<br>28.不同于模拟信号的另一类信号称为数字信号。（ √ ）<br>29.将模拟输入信号变为数字信号的过程包括两个步骤：抽样，量化。（ × ）<br>30.1895年，意大利人贝尔成功的进行了无线电报通信实验 。（ × ）<br>31.ITU第三代蜂窝网标准有三种：欧洲提的WCDMA,美国提出的CDMA2000，中国提出的TD-SCDMA。（ √ ）<br>32.1887年赫兹预见到电磁波的存在。（ × ）<br>33.用电信号传输消息时，首先要把消息转换成电信号（  √  ）<br>34.通信系统除了在发送方和接收方需要有发送设备和接收设备，还必须要有连接发送方和接收方的通信线路（  √  ）<br>35.光波是也是电磁波，在光谱中红光的频率最低，紫光的频率最高，但不能定论光谱就是不同频率电磁波的频谱（  X  ）<br>36.无线信道是利用电磁波在空间的传播来传输电信号的，为此在发送设备和接收设备中分别需要安装天线和接收天线来发射和接受无线电信号（  √  ）<br>37.散射传播分为电离层散射，对流层散射和流星余迹散射三类（  √  ）<br>38.信道的振幅特性不理想，则信号发生的失真称为频率失真，该失真会使信号的波形产生畸变（  √  ）<br>39.同步分为位同步，群同步，载波同步三种。此外，接收端有时需要解决载波同步问题（  X  ）<br>40.天线用于发射和接收无线电信号。当无线电信号的频率不太高时，多采用线天线；当无线电信号的频率很高时多采用面天线（  √  ）<br>41.信号按照其频谱占用的频带位置不同，可以区分为基带信号和带通信号。带通信号是基带信号经过调制后的信号，其频谱被搬移到了较低的频率范围（  X  ）<br>42.无线电频谱是电磁波频谱的一部分，从3Hz到3000GHz的电磁波称为无线电波。ITU把无线电频谱划分为10个频带（  X  ）<br>43.现在使用的莫尔斯电码是由莫尔斯个人发明的  (  × )<br>44.第一个民用蜂窝电话网是由爱立信公司建立 (  √ )<br>45.分析周期性信号的数学工具是傅里叶变换  (  ×  )<br>46.基带信号又称带通信号 (  ×  )<br>47.多址接入是网络资源通常是静态分配的  (  ×  )<br>48.移动台在不同移动交换中心之间的运动称为漫游 (  √  )<br>49.蓝牙属于无线个人网 (  √  )<br>50.体域网的设备可以植入人体内  (  √  )<br>51.量化的结果是让模拟信号变为量化信号 (  ×  )<br>52.信息量是4比特的事件概率为1/16  (  √  )<br>53.电信号是随时间变化的电压或电流。(  √  )<br>54.信源压缩编码的目的是减小信号的冗余度，提高信号的有效性，即提高信号的传输效率。(  √  )<br>55.蜂窝网在每个小区的中心建立一个固定无线电台，称为移动台。(  ×  )<br>56.激光器的输出有一定方向性。(  √  )<br>57.数据通信网按传输方式区分，可以分为无线和有线数据通信网两大类。(  √  )<br>58.物理层协议规定传输数据的物理链路的基本性能，包括:机械特性，电气特性和功能特性。(  ×  )<br>59.数字信号的码元传输速率的单位是比特。（  ×  ）<br>60.区分模拟信号和数字信号的准则，是看信号在时间上是连续的还是离散的。（  ×  ）<br>61.无线寻呼系统是一种没有话音的单向广播式选呼系统。（  √  ）<br>62.通信工程专业基础课程大体可以分为4类，即电路类、电场类、系统类和计算机类。（  √  ）<br>63.NOMA不适合免调度场景（ √ ）。<br>64.NOMA的分集增益不如MUSA（免调度情况下）。（ √ ）<br>65.VSAT系统全连接网络中，任意两个远端站之间都可以直接进行双向通信。（  √  ）<br>66.公共交换电话网可以分为短途电话网和长途电话网两部分。(✘)<br>改:分为本地电话网和长途电话网两部分。<br>67.在数字通信中，数字信号的基本单元是码元。(✔)<br>68.3GPP R4 最突出的特点是在 CS 域引入软交换概念，将呼叫控制与承载分离。(✔)<br>69.信息安全的理论基础是密码学，它只涉及密码编辑学。(✘)<br>改:还包括密码分析学。<br>70.不同于信号模拟的另一类信号称为数字信号。( ✔ )<br>1.电传打字机在一条通信线路的两端，不需要经过培训的两个电报员，只需要一个经过培训的打字员，就能在一个方向发送和接收消息。( √ )<br>2.信息不是物质也不是能量，信息不具有质量也不含能量。( √ )<br>3.离散频谱和连续频谱本质上相同。( × )<br>4.无线信道利用电磁波在空间的传波来传输电信号。( √ )<br>5.将简单的替代和置换做交织，并将交织过程重复多次，就能得到具有良好扩散和混淆性能的保密性极强的密码。(  × )<br>6.ADSL的上行和下行带宽相等( × )<br>7.蜂窝网被认为是解决地面移动通信的主要方法。( √ )<br>8.无线寻呼技术是一种有话音的单向广播式选呼系统。( × )<br>9.系统仿真的基本方法是建立系统的结构模型和量化分析模型。( √ )<br>10.信源有损压缩适用于计算机数据和文件等信源。( × )</p><h2 id="简答"><a href="#简答" class="headerlink" title="简答"></a>简答</h2><p>1.数字通信的优点:<br>      ①可以提高系统的抗干扰性;<br>      ②提高系统的保密性;<br>      ③可以减少冗余度，提高信道利用率;<br>2.早期出现的通信方式：<br>      ①运动通信、光通信、声通信。<br>3.简述信源压缩码的目的:<br>      ①减小信号的冗余度，提高的有效性（传输速率）。<br>4.简述公共交换电话网可以分为什么<br>      ①本地电话网和长途电话网。<br>5.通信工程专业对学生有哪些要求？<br>      ①作为通信工程专业的学生，不仅需要抱有严谨、踏实、刻苦的学习态度，需要有较好的数理基础、坚强的逻辑思维能力，还需要有很好的动手能力。通过学习通用电子仪器的使用(如示波器、频谱分析仪等)，逐步掌握很多通信实验设备的操作，以及制作小电子设备，如实验课上可能亲手设计并制作电子计算器、数字电子时钟、抢答器、遥控玩具车等有趣的电子产品。<br>6.简述运动通信的三个例子:<br>      ①驿站，驿马，飞鸽传书。<br>7.简述天线的主要性能:<br>      ①方向性、增益、效率<br>8.简述模拟输入信号转化为数字信号的过程：<br>      ①抽样、量化、编码<br>9.多路复用的目的是什么？有哪几种多路复用方法？<br>      ①提高线路利用率，节省线路开支。<br>      ②频分、时分、码分、空分和极分。<br>10.机顶盒的主要功能有哪些？<br>      ①信道信号解调、信源解码、上行数据的调制编码、显示控制和加解扰。<br>11.简述智能手机的特点:<br>      ①具有无线接入互联网的功能<br>      ②具有开放性的操作系统<br>      ③具有PDA的功能<br>12.数字数据网（DDN）的主要优点有哪些：<br>      ①采用数字交叉连接装置，信道和容量的分配和接续在计算机控制下进行，且有较大的灵活性；对数据终端设备的数据传输速率没有特殊要求。</p><h2 id="名词解释"><a href="#名词解释" class="headerlink" title="名词解释"></a>名词解释</h2><p>1.漫游:<br>      移动台在不同移动交换中心之间的运动。<br>2.频率偏移:<br>      是指信道数日信号的频谱经过信道传输后产生了平移。<br>3.信噪比:<br>      在接受设备中游泳信号功率和噪声功率之比。<br>4.单密钥密码:<br>      普通的密保通信系统使用一个密钥，这种密码称为单密钥密码。<br>5.移动通信:<br>      移动通信是指移动用户之间或移动用户与固定用户所进行的通信。<br>6.软切换:<br>      若切换的过程是缓慢过渡的，即移动台和原基站的联系信号强度逐渐减弱，和相邻基站的联系信号强度逐渐增强，则成为软切换。<br>7.硬切换:<br>      若切换是瞬间完成的，即移动台在切换到相邻基站的瞬间立即切断和原基站的联系，则称为硬切换。<br>8.切换:<br>      在移动台移动到相邻小区时，即转向和相邻基站建立链路，这一过程成为越区“切换”。<br>9.漫游:<br>      移动台在不同移动交换中心之间的运动称为漫游。<br>10.基站:<br>      蜂窝网在每个小区中心建立一个固定无线电台，称为基站。<br>11.相位抖动:<br>      经过抽样后的视音频信号，只是一系列时间或空间上的离散样值，而每个离散样值的取值仍是连续的，要想进行数字化表示必须将它转换为有限个离散值，这个过程称为量化。在数字系统中被量化之后的视音频信号其每个量化电平最终被赋予一个二进制码字。<br>12.采样:<br>      视音频信号数字编码的实质是:在保相位抖动是指数字信号的相位瞬时值相对其当时的理想值的动态偏移。<br>13.量化:<br>      对于音频信号而言，采样就是使音频信号在时间轴上离散化，每隔一个时间间隔在模拟声音波形上取一个幅度值。对于视频信号而言，采样就是使图像信号在空间位置上离散化。<br>14.编码:<br>      证定图像或声音质量的前提下，以最小比特数来表示视音频信号。<br>15.图形图像通信终端技术:<br>      图形图像通信终端，如传真机，它是把纸介质所记录的文字，图表、照片等信息，通过光电扫描方法变为电信号，经公共电话交换网络传输后，在接收端以硬拷贝的方式得到与发端相类似的纸介质信息。<br>16.解调:<br>      在接收端收到已调信号后，需要将其恢复成原调制信号，此恢复过程称为解调。<br>17.非线性失真:<br>      指信道输入信号和输出信号的振幅关系不是直线关系<br>18.电信号:<br>      随时间变化的电压或电流<br>19.码分复用:<br>      是利用不同的编码区分不同用户的消息<br>20.无线寻呼系统:<br>      是一种没有话音的单向广播式选呼系<br>21.5W:<br>      在任何时间、任何地点、任何人向任何他人，以任何方式通信<br>22.发射极:<br>      接在发射结一端的电极<br>23.集电极:<br>      接在集电结一端的电极<br>24.空分复用:<br>      空分复用是在无线链路中利用窄波束天线早不同方向上重复使用同一频带，即将频谱按空间划分复用<br>25.程控式交换机:<br>      随着数学通信技术的发展，在交换设备中一般采用时分数学交换技术，构成数学程序控制交换机，简称程控交换机<br>26.GSM:<br>      全球移动通信系统<br>27.有线信道:<br>      有线信道是传输电信号的导线，包括架空明线、对称电缆和同轴电缆；也可以是由传输光信号的光导纤维组成的光缆。<br>28.TIA:<br>      电信工业</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;通信考试试题&quot;&gt;&lt;a href=&quot;#通信考试试题&quot; class=&quot;headerlink&quot; title=&quot;通信考试试题&quot;&gt;&lt;/a&gt;通信考试试题&lt;/h1&gt;&lt;h2 id=&quot;选择&quot;&gt;&lt;a href=&quot;#选择&quot; class=&quot;headerlink&quot; title=&quot;选择&quot;&gt;&lt;</summary>
      
    
    
    
    
  </entry>
  
</feed>
